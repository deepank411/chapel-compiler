var exec  = require('child_process').exec;
var fs = require('fs');
var cuid = require('cuid');
var colors = require('colors');

exports.stats = false ;

exports.compileCHPL = function(envData, code, fn){
   var filename = cuid.slug();
   path = './temp/';

   fs.writeFile( path + filename + '.chpl', code, function(err){
      if(exports.stats){
         if(err){
            console.log('ERROR: '.red + err);
         }
         else{
            console.log('INFO: '.green + filename +'.chpl created');
            if(envData.cmd == 'chpl'){
               command = 'chpl ' + path + filename + '.chpl -o ' + path + filename + '.out';
               exec(command, function(error, stdout, stderr){
                  if(error){
                     if(exports.stats){
                        console.log('INFO: '.green + filename + '.chpl contained an error while compiling');
                     }
                     var out = {error: stderr};
                     fn(out);
                  }
                  else{
                     exec(path + filename + '.out', function(error, stdout, stderr){
                        if(error){
                           if(error.toString().indexOf('Error: stdout maxBuffer exceeded.') != -1)
									{
										var out = { error : 'Error: stdout maxBuffer exceeded. You might have initialized an infinite loop.' };
										fn(out);
									}
									else
									{
										if(exports.stats)
										{
											console.log('INFO: '.green + filename + '.chpl contained an error while executing');
										}
										var out = { error : stderr };
										fn(out);
									}
                        }
                        else{
                           if(exports.stats){
                              console.log('INFO: '.green + filename + '.chpl successfully compiled and executed !');
                           }
                           var out = {output : stdout};
                           fn(out);
                        }
                     });
                  }
               });
            }
            else{
               console.log('ERROR: '.red + 'choose the chpl compiler (no input)');
            }
         }
      }
   });
}

exports.compileCHPLWithInput = function(envData, code, input, fn){
   var filename = cuid.slug();
   path = './temp/';
   fs.writeFile( path + filename + '.chpl', code, function(err){
      if(exports.stats){
         if(err){
            console.log('ERROR: '.red + err);
         }
         else{
            console.log('INFO: '.green + filename +'.chpl created');
            if(envData.cmd == 'chpl'){
               command = 'chpl ' + path + filename + '.chpl -o ' + path + filename + '.out';
               exec(command, function(error, stdout, stderr){
                  if(error){
                     if(exports.stats){
                        console.log('INFO: '.green + filename + '.chpl contained an error while compiling');
                     }
                     var out = {error: stderr};
                     fn(out);
                  }
                  else{
                     if(input){
                        var inputfile = filename + 'input.txt';
                        // console.log(path+inputfile);
                        fs.writeFile(path + inputfile, input, function(err){
                           if(exports.stats){
                              if(err){
                                 console.log('ERROR: '.red + err);
                              }
                              else{
                                 console.log('INFO: '.green + path + inputfile + ' (inputfile) created');
                              }
                           }
                        });
                        exec(path + filename + '.out' + '<' + path + inputfile, function(error, stdout, stderr){
                           if(error){

										if(error.toString().indexOf('Error: stdout maxBuffer exceeded.') != -1){
											var out = { error : 'Error: stdout maxBuffer exceeded. You might have initialized an infinite loop.'};
											fn(out);
										}
										else{
											if(exports.stats){
												console.log('INFO: '.green + filename + '.chpl contained an error while executing');
											}
											var out =  { output : stderr};
											fn(out);
										}
									}
									else{
										if(exports.stats){
											console.log('INFO: '.green + filename + '.chpl successfully compiled and executed !');
										}
										var out = { output : stdout};
										fn(out);
									}
                        });
                     }
                     else{
                        if(exports.stats){
                           console.log('INFO: '.green + 'Input mission for '+filename +'.chpl');
                        }
                        var out = {error: 'Input Missing'};
                        fn(out);
                     }
                  }
               });
            }
            else{
               console.log('ERROR: '.red + 'choose the chpl compiler');
            }
         }
      }
   });
}

var exec  = require('child_process').exec;
var fs = require('fs');
var cuid = require('cuid');
var colors = require('colors');
var chplModule = require('./chplModule.js');

exports.stats = false;

exports.init = function(option){
	if(option){
		if(option.stats === true ){
			console.log('Statistics for compilex is On'.green);
			exports.stats = true;
		}
	}
	fs.exists( './temp' , function(exists){
		if(!exists){
			if(exports.stats){
				console.log('INFO: '.cyan + 'temp directory created for storing temporary files.'.cyan )
			}
			fs.mkdirSync('./temp');
		}
	});
}

exports.compileCHPL = function ( envData ,  code , fn ){
	if(exports.stats)
		chplModule.stats = true;
	chplModule.compileCHPL(envData , code , fn );
}

exports.compileCHPLWithInput = function ( envData , code , input ,  fn ) {
	if(exports.stats)
		chplModule.stats = true;
	chplModule.compileCHPLWithInput(envData , code , input , fn );
}

exports.flushSync = function() {
	path = '	./temp/';
	fs.readdir(path, function(err , files){
		if(!err){
			for( var i = 0 ; i<files.length ; i++ ){
				fs.unlinkSync(path+files[i]);
			}
		}
	});
}

exports.flush = function(fn) {
	path = './temp/';
	fs.readdir(path, function(err , files){
		if(!err){
			for( var i = 0 ; i<files.length ; i++ ){
				fs.unlinkSync(path+files[i]);
			}
		}
	});
	fn();
}

exports.fullStat = function(fn){
	var uptime = process.uptime();
	var chplCount = 0;
	var total = 0 ;

	var files = fs.readdirSync('temp');
	for(var file in files ){
		var stat = fs.statSync('temp/'+files[file]);
		if(stat.isFile()){
			if(files[file].indexOf('.chpl') !== -1){
				chplCount++;
			}
			total++;
		}
	}

	var jsonData = { serverUptime : uptime ,
		fileDetails : {
			chpl : chplCount
		}
	}
	if(exports.stats){
		var str  = "Server Statistics".yellow + "\n"
		+ "compilex Server Uptime : " + uptime  + "\n"
		+ "Files on storage :" + total + "\n"
		+ "CHPL files : " + chplCount + "\n";
		console.log(str);
	}
	fn(jsonData);
}
